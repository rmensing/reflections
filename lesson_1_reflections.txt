How did viewing a diff between two versions of a file help you see the bug that was introduced?

It reduced the clutter by only showing the lines that had been changed.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Not only will it make bug hunting easier but also you to restore to older versions or see what changes other have made.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Pro: Getting to choose when it is logical to make the commit.
Con: forgetting to make a commit or waiting too long to do it.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Some were designed with actions on a single file in mind for their most common use where others, like git, were designed to work with multiple files.

How can you use the commands git log and git diff to view the history of files?

Log shows the overall view of what was changed and diff shows the specific changes.

How might using version control make you more confident to make changes that could break something?

You can always find and fix any problems you may have introduced. It gives you a "do over".

Now that you have your workspace set up, what do you want to try using Git for?

I want to use it with the Android course.

